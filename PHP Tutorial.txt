PHP HyperText Preprocessor
-process and email contact forms
-upload files from online forms
-generate thumbnails from larger images
-watermark images

-read and write files
-communicate with a database MySql

-and much more....

Client
s/r
Web server
s/r 
PHP engine
s/s Database

Embedded language in HTMP markup
--PHP code remains in the server and will not show up on the Client

suggest XAMPP on windows

Script editor ****
PHP syntax checking
PHP syntax coloring
PHP code hints
Line numbering
A "brace balancing" feature

suggest
Among the free offerings, PHP development tools, PDT, and Komodo Edit, are good.
www.eclipse.org/pdt
www.activestate.com/komodo-edit

www,adobe.com/products/dreamweaver he will use



=======================Checking the PHP configuration
server root

XAMPP
c:\xampp\htdocs 
 
  in here create introducingphp and setup folder then
 now create a file called config.php
 with only one line
<?php phpinfo(); ?>

 can see it in browser like this http://localhost/introducingphp/setup/config.php
 
 1) see php version at top
 2) Core section
 --display_errors should be on for local running but off for live version for security
 --error_reporting   should be at least 32767
 --magic_quotes_gpc  is not longer used
 
 ==============================Changing configuration settings
 in php.ini
 magic_quotes_gpc=Off should match the setting on the remote server (most likely is Off)
 
 error_reporting=E_ALL & ~E_DEPRECATED & ~E_STRICT
 on a MAC he set it to this
 error_reporting=E_ALL | E_STRICT   this gets the value set to 32767
 





 
 ===============***** Chapter 2 PHP Basics ******============
 =======================PHP: The big picture
 --must be processed and stored in the server root 
 --.php 
 -- PHP enclose in tags  <?php  ?>
 Common Features
    variables
	arrays
	conditional
	loops
	functions and objects
Must be processed by  the server so do not see PHP
Always view the page using a URL  http://localhost...
 
========================Naming variables
rules
   Name
   Total 
   
   Always begins with $ 
   next no number
   only _ allowed
   no spaces 
   are case sensitive 
   
   **** 
   $this is reserved
   do not use the following http://www.php.net/manual/en/reserved.php 
   
  use camel case or _  eg $firstName or $first_name 
  
========================Displaying text and numbers
$firstName = 'Rick';
$firstName = 'Rick';
$total = 56;
echo $firstName;
print $firstName;

Echo can do more variables with commas
echo $firstName, $total;

<?php 
$firstName = 'Rick';
$total = 56;
echo $firstName, $total;
print $firstName;
?>

========================Comments and whitespace
<?php
// This is a comment that will be ignored by php 
# This is also a comment 
$firstName = 'David'; //This ia a single line comment
$lastName = 'Sring'; #comment
/* This ia a multiple line commentIs takes 
   on until */
   
   echo $firstName;
   echo ' ';
   echo $lastName;
========================Storing text as strings
single and double quotes
<?php
$book = "Hitchhiker's Guide to the Galaxy";
$book = 'Hitchhiker\'s Guide to the Galaxy';
$book = '"Hitchhiker\'s Guide to the Galaxy"';
echo 'I love $book';
echo ".....I love $book";

Escape Chars
\"
\n
\r carriage return
\t 
\\
\$ 
\{ 
\}
\[
\]
========================Joining strings 
Concat uses . period
$newLines = "\r\n\r\n";

$fullName = $firstName . ' ' . $lastName;
//echo $fullName . '<br>';

// Variables are processed in a double-quoted string
$recommendation = "$book by $author";
//echo $recommendation;

$message = "Name: $fullName $newLines";
$message .= "Recommendation: $recommendation $newLines";
$message .= "Times listened: $timesListened";
echo $message;


=========================
<!DOCTYPE HTML>
<html>
<head>
<meta charset="utf-8">
<title><?= $fullName; ?> Recommends</title>     // see ?=
</head>
========================Doing calculations with PHP 
+ 
-
*
/
%  MODULO DIVISION 5%2 = 1 THE REMAINDER
++  ADD 1
--  SUBTRACT ONE
   eg 
   $number = 5;
   $result = ++$number +2;  //is 8
   vs
   $result = $number++ +2;
   
others
+=  $a += $b is $a = $a + $balancing

========================Storing multiple values in arrays
$charactersBook = array('Simba', 'r2d2', 'Ford PRefect', 'Zephod Beelebrox');
//echo $charactersBook; //does not work
print_r($charactersBook);
echo '<br>';
echo $charactersBook[1];
$charactersBook[] = 'Marvin'; 
$charactersBook[] = 'Slartilbartfartfast';
echo '<br>';
print_r($charactersBook); echo '<br><br>';

//associative array 
//key value
$descriptions = array('Earth' => 'mostly harnless',
						'Marvin' => 'the paranoid android');
//add more
$descriptions['Zephod'] = 'Presidend ofthe Imperial Galactic Government';
print_r($descriptions);
// echo "Earth is described as $descriptions['Earth']";  //not good 
//need curly brackets for this
echo '<br><br>';
echo "Earth is described as {$descriptions['Earth']}";





 ===============***** Chapter 3 Using Control Structures and Loops ******============
==================================== The truth according to PHP
True or False Booleans
Explicit true or false TRUE FaLsE
vs

 Implicit
 PHP regard the following values as FALSE 
 -the keywords false and null
 -zero as a number or string (0, 0.0. '0')
 -an empty string ('', "")
 -An empty array-a Simple XML object created from empty tags

 everything else is Implicitly True 
 -1 is true
 $OK = 'false';   //OK is true since it is a string 
 
==================================== Making decisions with conditions and comparisons
if (condition is true) { do something}  //no ; needed

if (condition is true) { do something} 
else {do this}

if (condition is true) { do something} 
elseif (second condition) {do this}
else {do this}

Comparison Operators
== Both are equal
!=
=== Both are identical
!== The values are not identical
>   The left value is greate than the right one>=
<
<=

=====================
Logical Operators 
&&  $a && $b  true if both are true
||  $a || $b  true if either are true
!   !$a       true is $a is false 


==================================== Using switch statements and the ternary operator
switch ($var) 
{
	case value1:
		do this;
		break;
	case value2:
	case value3
		do this;
		break;
	case value4:
		do this;
		break;
	default:
		do this;
}

same as if else and elseif 

see switch.php

==============
Ternary Operator
$var = (condition) ? value if true : value if false; 

==================================== Using loops for repetitive actions
While Looping
while (condition) {
//code to be executed
}

do { 
//code to be executed 
} while (condition);


For Looping
for (initialize; condition; increment)
{
//code to be executed
}
==================================== Looping through the contents of an array
For Each loops
foreach ($array_name as $value) {
	//do something with $value 
}

Accessing Arrays    Keys and Values
foreach ($array_name as $key => $value) {
	//do something wtih $key and $value 
}










 ===============***** Chapter 4 Functions, Objects, and Errors ******============
==================================== Using the built-in functions of PHP
phpversion();  all return a value which you can use or not 
echo phpversion(); 
$version phpversion(); 

most functions require values 
$name = 'RICK';
echo strtolower($name) . '<br>' . $name;

$name = ucfirst(strtolower($name));
echo $name; 

==============================
$input = '<p>Hi, <script>alert("Boo!");</script><a href="http://www.example.com/">visit my site</a>.</p>';

// strip_tags() takes either one or two arguments.
// The second, optional argument consists of a string containing tags you want to preserve.
echo strip_tags($input);
echo strip_tags($input, '<p><a>');

NOTE: <script> is JAVASCRIPT
==============================
// Ths sort() and rsort() functions change the original value of the array passed to them as an argument.
see built-in3.php 

==================================== Understanding PHP documentation

 www.php.net/manual/en/
 
 start with the function reference **** 
 See:
 Text Processing : Strings
 Variable and Type Related Extensions : Arrays 
 
 
 NOTES:
 bool sort (array &$array [, int $sort_flags = SORT-REGULAR])  
								NOTE:// & before $array means it changes $array the input variable
==================================== Creating custom functions
==================================== Including external files
==================================== Passing values by reference to a function
==================================== Understanding PHP classes and objects
==================================== Deciphering error messages
==================================== 
  
  
  
  
  
  
  
  
  
  
 ===============***** Chapter 5 Emailing the Contents of an Online Form ******============
==================================== Understanding the difference between POST and GET
==================================== Eliminating unwanted backslashes

==================================== How PHP sends email
==================================== Displaying error messages conditionally
==================================== Making sure required fields aren't blank
==================================== Preserving user input when a form is incomplete
==================================== Blocking suspect phrases
==================================== Adding headers and automating the reply address
 ==================================== Building the message body
 ==================================== Sending the email
 ==================================== 
 ==================================== 
 ==================================== 
 ==================================== 
 ==================================== 
   
   
   
   
   
   
   
   
   
   
 ===============***** Chapter 6 Dealing with Multiple-Choise Form Fields ******============
==================================== Handling radio button groups
==================================== Handling single checkboxes
==================================== Handling checkbox groups
==================================== Handling select menus
==================================== Handling multiple-choice lists
==================================== 
==================================== 
==================================== 
 
 
 